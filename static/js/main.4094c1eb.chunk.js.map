{"version":3,"sources":["Questionario.js","styles/CardQuestion.jsx","components/Question.jsx","components/NavBar.jsx","components/About.jsx","components/Home.jsx","containers/App.js","index.js"],"names":["questionGeek","question","a","b","c","d","corrrect","DivForm","styled","div","FormStyle","Form","Titulo","h2","RadioStyle","Check","ButtonStyle","Button","Question","handleSubmit","e","preventDefault","target","reset","state","answerSelect","correct","setState","score","numberQuestion","length","componentDidMount","console","log","onChanged","currentTarget","value","currentQuizData","this","onSubmit","Group","className","controlId","style","padding","type","label","name","id","onChange","variant","onClick","textAlign","Component","NavBar","Nav","to","About","ContainerStyle","Image","src","rounded","width","Home","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4094c1eb.chunk.js","sourcesContent":["export const questionHarryPotter = [\n    {\n        question: \"¿Qué hechizo usó Harry para matar a Lord Voldemort?\",\n        a: \"Expelliarmus\",\n        b: \"Expecto Patronum\",\n        c: \"Avada Kedavra\",\n        d: \"Accio\",\n        corrrect: \"Expelliarmus\"\n    },\n    {\n        question: \"Es Levi-O-sa, no ...\",\n        a: \"LEVI-o-sa\",\n        b: \"Levi-O-sa\",\n        c: \"Levi-o-SA\",\n        d: \"LEVI-o-SA\",\n        corrrect: \"Levi-o-SA\"\n    },\n    {\n        question: \"Cuando se desentierra, ¿qué hará una mandrágora?\",\n        a: \"Baile\",\n        b: \"Eructo\",\n        c: \"Reir\",\n        d: \"Gritar\",\n        corrrect: \"Gritar\"\n    },\n    {\n        question: \"En Harry Potter, ¿Qué hechizo debes conjurar para arreglar unas gafas?\",\n        a: \"Oculus reparo\",\n        b: \"Oculo reparat\",\n        c: \"Glafulus arreglo\",\n        d: \"Reparat ojus\",\n        corrrect: \"Oculus reparo\"\n    },\n    {\n        question: \"¿En qué posición juega Harry en su equipo de Quidditch?\",\n        a: \"Cazador\",\n        b: \"Buscador\",\n        c: \"Bludger\",\n        d: \"Guardián\",\n        corrrect: \"Buscador\"\n    },\n    {\n        question: \"¿Cómo se llamaba el elfo doméstico de la familia Black?\",\n        a: \"Dobby\",\n        b: \"Winky\",\n        c: \"Kreacher\",\n        d: \"hockey\",\n        corrrect: \"Kreacher\"\n    },\n]\n\nexport const questionGames = [\n    {\n        question: \"En Assassins Creed, 'Nada es verdad...'\",\n        a: \"salvo algunas cosas\",\n        b: \"hasta que se hace realidad\",\n        c: \"aunque en realidad si\",\n        d: \"todo está permitido\",\n        corrrect: \"todo está permitido\"\n    },\n    {\n        question: \"¿Cómo se llama el hermano de Mario Bros?\",\n        a: \"Luigi\",\n        b: \"Mario Jr\",\n        c: \"Tony\",\n        d: \"Honguito\",\n        corrrect: \"Luigi\"\n    },\n    {\n        question: \"¿Cómo se llama el enemigo de Sonic?\",\n        a: \"Dr. Malo\",\n        b: \"Robotech\",\n        c: \"Tails\",\n        d: \"Dr. Robotnik\",\n        corrrect: \"Dr. Robotnik\"\n    },\n    {\n        question: \"¿Cómo se llama la ciudad en la que desenvuelve Resident Evil?\",\n        a: \"New York\",\n        b: \"Raccoon City\",\n        c: \"Metrópolis\",\n        d: \"Gotam City\",\n        corrrect: \"Raccoon City\"\n    },\n    {\n        question: \"¿Como se llama la protagonista de la saga de Tom Raider\",\n        a: \"Jill Valentine\",\n        b: \"Samus Aran\",\n        c: \"Lara Croft\",\n        d: \"Aloy\",\n        corrrect: \"Lara Croft\"\n    },\n    {\n        question: \"¿Que lenguaje de programación se utilizó  para crear Minecraft?\",\n        a: \"c++\",\n        b: \"python\",\n        c: \"php\",\n        d: \"java\",\n        corrrect: \"java\"\n    },\n]\n\nexport const questionGeek = [\n    {\n        question: \"¿De qué metal están hechas las garras de Wolverine?\",\n        a: \"Aluminio\",\n        b: \"Vibranium\",\n        c: \"Acero\",\n        d: \"Adamantium\",\n        corrrect: \"Adamantium\"\n    },\n    {\n        question: \"¿Qué hechizo usó Harry para matar a Lord Voldemort?\",\n        a: \"Expelliarmus\",\n        b: \"Expecto Patronum\",\n        c: \"Avada Kedavra\",\n        d: \"Accio\",\n        corrrect: \"Expelliarmus\"\n    },\n    {\n        question: \"Un anillo...\",\n        a: \"para liberarlos a todos\",\n        b: \"para llamarlos a todos\",\n        c: \"para gobernarlos a todos\",\n        d: \"para destruirlos\",\n        corrrect: \"para gobernarlos a todos\"\n    },\n    {\n        question: \"En Assassins Creed, 'Nada es verdad...'\",\n        a: \"salvo algunas cosas\",\n        b: \"hasta que se hace realidad\",\n        c: \"aunque en realidad si\",\n        d: \"todo está permitido\",\n        corrrect: \"todo está permitido\"\n    },\n    {\n        question: \"¿En qué posición juega Harry en su equipo de Quidditch?\",\n        a: \"Cazador\",\n        b: \"Buscador\",\n        c: \"Bludger\",\n        d: \"Guardián\",\n        corrrect: \"Buscador\"\n    },\n    {\n        question: \"¿Cómo se llama el hermano de Mario Bros?\",\n        a: \"Luigi\",\n        b: \"Mario Jr\",\n        c: \"Tony\",\n        d: \"Honguito\",\n        corrrect: \"Luigi\"\n    },\n    {\n        question: \"¿Qué talento mágico comparte Harry con Voldemort?\",\n        a: \"Ser un animago\",\n        b: \"Ser un hablante de pársel\",\n        c: \"Ser un auror\",\n        d: \"Ser un mortífago\",\n        corrrect: \"Ser un hablante de pársel\"\n    },\n    {\n        question: \"¿Cómo se llama el enemigo de Sonic?\",\n        a: \"Dr. Malo\",\n        b: \"Robotech\",\n        c: \"Tails\",\n        d: \"Dr. Robotnik\",\n        corrrect: \"Dr. Robotnik\"\n    },\n    {\n        question: \"¿Cómo se llama la ciudad en la que desenvuelve Resident Evil?\",\n        a: \"New York\",\n        b: \"Raccoon City\",\n        c: \"Metrópolis\",\n        d: \"Gotam City\",\n        corrrect: \"Raccoon City\"\n    },\n    {\n        question: \"¿Como se llama la protagonista de la saga de Tom Raider\",\n        a: \"Jill Valentine\",\n        b: \"Samus Aran\",\n        c: \"Lara Croft\",\n        d: \"Aloy\",\n        corrrect: \"Lara Croft\"\n    },\n    {\n        question: \"¿A que se le considera 'lag' en un video juego?\",\n        a: \"Conexión mala/inestable de internet\",\n        b: \"Bajadas abruptas de FPS\",\n        c: \"Baja carga gráfica de un video juego\",\n        d: \"Caerse del servidor\",\n        corrrect: \"Conexión mala/inestable de internet\"\n    },\n    {\n        question: \"Es Levi-O-sa, no ...\",\n        a: \"LEVI-o-sa\",\n        b: \"Levi-O-sa\",\n        c: \"Levi-o-SA\",\n        d: \"LEVI-o-SA\",\n        corrrect: \"Levi-o-SA\"\n    },\n    {\n        question: \"Cuando se desentierra, ¿qué hará una mandrágora?\",\n        a: \"Baile\",\n        b: \"Eructo\",\n        c: \"Reir\",\n        d: \"Gritar\",\n        corrrect: \"Gritar\"\n    }\n]","import { Form, Button } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nexport const DivForm = styled.div`\n    background-image: linear-gradient(315deg, #b8c6db 0%, #f5f7fa 100%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n`\n\nexport const FormStyle = styled(Form)`\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 0 10px 2px rgba(100, 100, 100, 0.1);\n    width: 600px;\n`\n\nexport const Titulo = styled.h2`\n    padding: 1rem;\n    text-align: center;\n    margin: 0;\n`\nexport const RadioStyle = styled(Form.Check)`\n    padding: 0;\n    font-size: 1.2rem;\n    margin: 1rem 0;\n`\n\nexport const ButtonStyle = styled(Button)`\n    background-color: #8e44ad;\n    border:none;\n    width: 100%;\n    font-size: 1.1rem;\n    padding: 1.3rem;\n    &:hover{\n        background-color: #732d91;\n    }\n    &:focus{\n        outline: none;\n        background-color: #5e3370;\n    }\n`","import React, { Component } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { questionGeek } from '../Questionario';\nimport { ButtonStyle, DivForm, FormStyle, RadioStyle, Titulo } from '../styles/CardQuestion'\n\nexport default class Question extends Component {\n\n    constructor() { // declarating all the states and default values\n        super();\n        this.state = {\n            numberQuestion: 0,\n            question: {\n                question: \"\",\n                a: \"\",\n                b: \"\",\n                c: \"\",\n                d: \"\",\n                correct: \"\"\n            },\n            score: 0,\n            answerSelect: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const currentQuizData = questionGeek[this.state.numberQuestion]\n\n        this.setState({\n            question: {\n                question: currentQuizData.question,\n                a: currentQuizData.a,\n                b: currentQuizData.b,\n                c: currentQuizData.c,\n                d: currentQuizData.d,\n                correct: currentQuizData.correct\n            }\n        })\n    }\n\n    handleSubmit = (e) => { //trigers the event when btn is clicke\n        e.preventDefault()\n        e.target.reset()\n        if (this.state.answerSelect === this.state.question.correct) {\n            this.setState({\n                score: this.state.score + 1,\n            })\n        }\n        if (this.state.numberQuestion < questionGeek.length) {\n            this.componentDidMount() //this reloads and sets the values of the states\n        } else {\n            console.log(this.state.score);\n        }\n    }\n\n    onChanged = (e) => { //detects the change and stores the value in answerSelect\n        this.setState({\n            answerSelect: e.currentTarget.value\n        })\n        console.log(this.state.answerSelect);\n    }\n\n    render() {\n        return (\n            <DivForm>\n                <FormStyle onSubmit={this.handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"control-radio\" style={{ padding: \"4rem\" }}>\n                        <h3>Pregunta {this.state.numberQuestion} de {questionGeek.length}</h3>\n                        <Titulo>{this.state.question.question}</Titulo>\n                        <RadioStyle\n                            type=\"radio\"\n                            label={this.state.question.a}\n                            value={this.state.question.a}\n                            name={'respuestas'}\n                            id={`respuesta1`}\n                            onChange={this.onChanged}\n                        />\n                        <RadioStyle\n                            type=\"radio\"\n                            label={this.state.question.b}\n                            value={this.state.question.b}\n                            name={'respuestas'}\n                            id={`respuesta2`}\n                            onChange={this.onChanged}\n                        />\n                        <RadioStyle\n                            type=\"radio\"\n                            label={this.state.question.c}\n                            value={this.state.question.c}\n                            name={'respuestas'}\n                            id={`respuesta3`}\n                            onChange={this.onChanged}\n                        />\n                        <RadioStyle\n                            type=\"radio\"\n                            label={this.state.question.d}\n                            value={this.state.question.d}\n                            name={'respuestas'}\n                            id={`respuesta4`}\n                            onChange={this.onChanged}\n                        />\n                    </Form.Group>\n                    <ButtonStyle variant=\"primary\" type=\"submit\" onClick={() => { this.setState({ numberQuestion: this.state.numberQuestion + 1 }) }}>\n                        Enviar\n                    </ButtonStyle>\n                    <h2 style={{ textAlign: \"center\" }}>{this.state.score}/{questionGeek.length} </h2>\n                </FormStyle>\n            </DivForm>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport default class NavBar extends Component {\n    render() {\n        return (\n            <Nav>\n                <Link to=\"/\" className=\"nav-link\">Home</Link>\n                <Link to=\"/question\" className=\"nav-link\">Cuestionario friki</Link>\n                <Link to=\"/about\" className=\"nav-link\">Sobre el formulario</Link>\n            </Nav>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { DivForm } from '../styles/CardQuestion'\nimport styled from 'styled-components'\nimport { Image } from 'react-bootstrap'\n\nexport default class About extends Component {\n    render() {\n\n        const ContainerStyle = styled.div`\n            background-color: #fff;\n            border-radius: 10px;\n            box-shadow: 0 0 10px 2px rgba(100, 100, 100, 0.1);\n            width: 80%;\n            padding: 4rem;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        `\n        return (\n            <DivForm>\n                <ContainerStyle>\n                    <h2>Sobre este formulario</h2>\n                    <p>{\n                        `El 25 de mayo se celebra el Día del Orgullo Friki en nuestro país. Una celebración surgida en 2006 en Internet y que congrega a toda una comunidad, a priori minoritaria, que no se avergüenza en absoluto de celebrar con orgullo que son frikis.\n                        Gamers, geeks, freaks, weirdos y demás miembros de esta comunidad tiene la oportunidad cada 25 de mayo de mostrar al mundo que ser friki es algo por lo que merece la pena sentirse orgulloso. Y es que, aunque muchos no lo reconozcan, todos tenemos un 'friki' interior, en mayor o menor medida, con el que nos sentimos bien -incluso orgullosos- y del que renegar es tan absurdo como poco sano.\n                        Por ello y porque queremos unirnos a esta divertida celebración, hemos elaborado este friki-test con el fin de que compartáis con orgullo aquello que gritáis a los cuatro vientos: ¡Soy Friki!`\n                    }\n                    </p>\n                    <Image src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cYgHri3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/lepok0cc608byz1aq139.png\" rounded width=\"250px\" style={{ textAlign: \"center\" }} />\n\n                </ContainerStyle>\n            </DivForm>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { DivForm } from '../styles/CardQuestion'\nimport styled from 'styled-components'\nimport { Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport default class Home extends Component {\n    render() {\n        const ContainerStyle = styled.div` // declaring ContainerStyle style\n            background-color: #fff;\n            border-radius: 10px;\n            box-shadow: 0 0 10px 2px rgba(100, 100, 100, 0.1);\n            width: 80%;\n            padding: 4rem;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        `\n        return (\n            <DivForm>\n                <ContainerStyle>\n                    <h2>Inicio</h2>\n                    <p>{\n                        `Realiza este cuestionario para descrubir que tan friki eres, encontrarás preguntas de video juegos y de peliculas que un friki de corazón ha visto más de 2 veces.`\n                    }\n                    </p>\n                    <Image src=\"https://www.pngkit.com/png/full/192-1923288_octocat-github-logo-transparent-octdrey-catburn.png\" rounded width=\"250px\" style={{ textAlign: \"center\" }} />\n                    <Link to=\"/question\" className=\"nav-link\">Comienza el formulario aquí</Link>\n                </ContainerStyle>\n            </DivForm>\n        )\n    }\n}\n","import React from 'react';\nimport Question from \"../components/Question\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport NavBar from '../components/NavBar';\nimport About from '../components/About';\nimport Home from '../components/Home';\n\n// the browser router goes first so it chaches the routes\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Routes> //defines routes order.\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/question\" element={<Question />} />\n        <Route path=\"/about\" element={<About />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}